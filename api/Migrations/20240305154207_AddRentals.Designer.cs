// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Bikes.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace bikes.Migrations
{
    [DbContext(typeof(BikesDbContext))]
    [Migration("20240305154207_AddRentals")]
    partial class AddRentals
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Bikes.Models.Bike", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Plate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Plate")
                        .IsUnique();

                    b.ToTable("Bikes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Model = "Yamaha V10 Tracker",
                            Plate = "ABC1234",
                            Year = 2020
                        },
                        new
                        {
                            Id = 2,
                            Model = "Honda CB 500",
                            Plate = "DEF5678",
                            Year = 2021
                        },
                        new
                        {
                            Id = 3,
                            Model = "Suzuki GSX 750",
                            Plate = "GHI9101",
                            Year = 2019
                        });
                });

            modelBuilder.Entity("bikes.Models.Rental", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BikeId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("PlanId")
                        .HasColumnType("integer");

                    b.Property<int>("RiderId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("PlanId");

                    b.HasIndex("RiderId");

                    b.ToTable("Rentals");
                });

            modelBuilder.Entity("bikes.Models.RentalPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DaysDuration")
                        .HasColumnType("integer");

                    b.Property<int>("OverdueDayPrice")
                        .HasColumnType("integer");

                    b.Property<int>("PricePerDay")
                        .HasColumnType("integer");

                    b.Property<int>("UnusedDayPrice")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("RentalPlans");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DaysDuration = 7,
                            OverdueDayPrice = 5000,
                            PricePerDay = 3000,
                            UnusedDayPrice = 600
                        },
                        new
                        {
                            Id = 2,
                            DaysDuration = 15,
                            OverdueDayPrice = 5000,
                            PricePerDay = 2800,
                            UnusedDayPrice = 1120
                        },
                        new
                        {
                            Id = 3,
                            DaysDuration = 30,
                            OverdueDayPrice = 5000,
                            PricePerDay = 2200,
                            UnusedDayPrice = 1320
                        });
                });

            modelBuilder.Entity("bikes.Rider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CnhNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CnhPhotoUrl")
                        .HasColumnType("text");

                    b.Property<int>("CnhType")
                        .HasColumnType("integer");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CnhNumber")
                        .IsUnique();

                    b.HasIndex("Cnpj")
                        .IsUnique();

                    b.ToTable("Riders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthdate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CnhNumber = "1234567890",
                            CnhPhotoUrl = "https://example.com/cnh-photo.jpg",
                            CnhType = 0,
                            Cnpj = "12345678900000",
                            Name = "John Doe"
                        },
                        new
                        {
                            Id = 2,
                            Birthdate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CnhNumber = "1234567891",
                            CnhPhotoUrl = "https://example.com/cnh-photo.jpg",
                            CnhType = 0,
                            Cnpj = "12345678900001",
                            Name = "Jane Doe"
                        });
                });

            modelBuilder.Entity("bikes.Models.Rental", b =>
                {
                    b.HasOne("bikes.Models.RentalPlan", "Plan")
                        .WithMany()
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bikes.Models.Bike", "Bike")
                        .WithMany("Rentals")
                        .HasForeignKey("RiderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bikes.Rider", "Rider")
                        .WithMany()
                        .HasForeignKey("RiderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bike");

                    b.Navigation("Plan");

                    b.Navigation("Rider");
                });

            modelBuilder.Entity("Bikes.Models.Bike", b =>
                {
                    b.Navigation("Rentals");
                });
#pragma warning restore 612, 618
        }
    }
}
